# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Float!
  createdAt: String!
  updatedAt: String!
  name: String!
  coverImg: String!
  restaurant: [Restaurant!]!
}

type Restaurant {
  id: Float!
  name: String!
  isVegan: Boolean
  address: String!
  category: Category
  owner: User!
}

type User {
  id: Float!
  createdAt: String!
  updatedAt: String!
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurant: [Restaurant!]!
}

enum UserRole {
  Owner
  Client
  Delivery
}

type CreateAccountOutput {
  error: String
  ok: Boolean!
}

type EditProfileOutput {
  error: String
  ok: Boolean!
}

type LoginOutput {
  error: String
  ok: Boolean!
  token: String
}

type UserProfileOutput {
  error: String
  ok: Boolean!
  user: User
}

type VerfiyEmailOutput {
  error: String
  ok: Boolean!
}

type Query {
  hi: Boolean!
  me: User!
  userProfile(userId: Float!): UserProfileOutput!
  isPizzaGood: Boolean!
  restaurants: [Restaurant!]
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  login(input: LoginInput!): LoginOutput!
  editProfile(input: EditProfileInput!): EditProfileOutput!
  verfifyEmail(input: VerifyEmailInput!): VerfiyEmailOutput!
  createRestaurantWithArgs(ownerName: String!, address: String!, isVegan: Boolean!, name: String!): Boolean!
  createRestaurantWithInputType(CreateRestaurantInputDto: CreateRestaurantInputDto!): Boolean!
  createRestaurant: Boolean!
  updateRestaurant(input: UpdateRestaurantDto!): Boolean!
}

input CreateAccountInput {
  email: String!
  password: String!
  role: UserRole!
}

input LoginInput {
  email: String!
  password: String!
}

input EditProfileInput {
  email: String
  password: String
}

input VerifyEmailInput {
  code: String!
}

input CreateRestaurantInputDto {
  name: String!
  isVegan: Boolean
  address: String = "주소를 입력해주세요"
  category: CategoryInputType
  owner: UserInputType!
}

input CategoryInputType {
  name: String!
  coverImg: String!
  restaurant: [RestaurantInputType!]!
}

input RestaurantInputType {
  id: Float!
  name: String!
  isVegan: Boolean
  address: String = "주소를 입력해주세요"
  category: CategoryInputType
  owner: UserInputType!
}

input UserInputType {
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurant: [RestaurantInputType!]!
}

input UpdateRestaurantDto {
  id: Float!
  data: UpdateRestaurantInputType!
}

input UpdateRestaurantInputType {
  name: String
  isVegan: Boolean
  address: String = "주소를 입력해주세요"
  category: CategoryInputType
  owner: UserInputType
}
