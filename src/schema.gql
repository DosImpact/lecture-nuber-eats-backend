# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Category {
  id: Float!
  createdAt: String!
  updatedAt: String!
  name: String!
  coverImg: String
  slug: String!
  restaurants: [Restaurant!]!
  restaurantCount: Int!
}

type Restaurant {
  id: Float!
  createdAt: String!
  updatedAt: String!
  name: String!
  coverImg: String!
  address: String!
  category: Category
  owner: User
}

type User {
  id: Float!
  createdAt: String!
  updatedAt: String!
  email: String!
  password: String!
  role: UserRole!
  verified: Boolean!
  restaurant: [Restaurant!]
}

enum UserRole {
  Owner
  Client
  Delivery
}

type CreateAccountOutput {
  error: String
  ok: Boolean!
}

type EditProfileOutput {
  error: String
  ok: Boolean!
}

type LoginOutput {
  error: String
  ok: Boolean!
  token: String
}

type UserProfileOutput {
  error: String
  ok: Boolean!
  user: User
}

type VerfiyEmailOutput {
  error: String
  ok: Boolean!
}

type AllCategoriesOutput {
  error: String
  ok: Boolean!
  categories: [Category!]
}

type CategoryOutput {
  error: String
  ok: Boolean!
  totalPage: Int
  totalResults: Int
  restaurants: Restaurant
  category: Category
}

type CreateRestauranOutput {
  error: String
  ok: Boolean!
}

type DeleteRestaurantOutput {
  error: String
  ok: Boolean!
}

type EditRestaurantOutput {
  error: String
  ok: Boolean!
}

type RestaurantOutput {
  error: String
  ok: Boolean!
  restaurant: Restaurant
}

type RestaurantsOutput {
  error: String
  ok: Boolean!
  totalPage: Int
  totalResults: Int
  results: [Restaurant!]
}

type SearchRestaurantsOutput {
  error: String
  ok: Boolean!
  totalPage: Int
  totalResults: Int
  restaurants: [Restaurant!]
}

type Query {
  hi: Boolean!
  me: User!
  userProfile(userId: Float!): UserProfileOutput!
  restaurants(input: RestaurantsInput!): RestaurantsOutput!
  restaurant(input: RestaurantInput!): RestaurantOutput!
  searchRestaurant: SearchRestaurantsOutput!
  allCategories: AllCategoriesOutput!
  category(input: CategoryInput!): CategoryOutput!
}

input RestaurantsInput {
  page: Int = 1
}

input RestaurantInput {
  restaurantId: Int!
}

input CategoryInput {
  page: Int = 1
  slug: String!
}

type Mutation {
  createAccount(input: CreateAccountInput!): CreateAccountOutput!
  login(input: LoginInput!): LoginOutput!
  editProfile(input: EditProfileInput!): EditProfileOutput!
  verfifyEmail(input: VerifyEmailInput!): VerfiyEmailOutput!
  createRestaurant(input: CreateRestaurantInput!): CreateRestauranOutput!
  editRestaurant(input: EditRestaurantInput!): EditRestaurantOutput!
  deleteRestaurant(input: DeleteRestaurantInput!): DeleteRestaurantOutput!
}

input CreateAccountInput {
  email: String!
  password: String!
  role: UserRole!
}

input LoginInput {
  email: String!
  password: String!
}

input EditProfileInput {
  email: String
  password: String
}

input VerifyEmailInput {
  code: String!
}

input CreateRestaurantInput {
  name: String!
  coverImg: String!
  address: String = "주소를 입력해주세요"
  categoryName: String!
}

input EditRestaurantInput {
  name: String
  coverImg: String
  address: String = "주소를 입력해주세요"
  categoryName: String
  restaurantId: Float!
}

input DeleteRestaurantInput {
  restaurantId: Float!
}
